<?xml version="1.0" encoding="utf-8" ?>
<CodeSnippets  xmlns="http://schemas.microsoft.com/VisualStudio/2005/CodeSnippet">
    <CodeSnippet Format="1.0.0">
        <Header>
            <Title>Defines a read-only attached DependencyProperty</Title>
            <Shortcut>propar</Shortcut>
            <Description>Code snippet for a read-only attached DependencyProperty.</Description>
            <Author>Manuel RÃ¶mer</Author>
            <SnippetTypes>
                <SnippetType>Expansion</SnippetType>
            </SnippetTypes>
        </Header>
        <Snippet>
            <Declarations>
                <Literal>
                    <ID>type</ID>
                    <ToolTip>Property Type</ToolTip>
                    <Default>int</Default>
                </Literal>
                <Literal>
                    <ID>property</ID>
                    <ToolTip>Property Name</ToolTip>
                    <Default>MyProperty</Default>
                </Literal>
                <Literal>
                    <ID>ownerclass</ID>
                    <ToolTip>The owning class of this Property.  Typically the class that it is declared in.</ToolTip>
                    <Default>ownerclass</Default>
                </Literal>
                <Literal>
                    <ID>defaultvalue</ID>
                    <ToolTip>The default value for this property.</ToolTip>
                    <Default>0</Default>
                </Literal>
            </Declarations>
            <Code Language="csharp">
                <![CDATA[
private static readonly DependencyPropertyKey $property$PropertyKey = 
    DependencyProperty.RegisterAttachedReadOnly(
        "$property$", 
        typeof($type$),
        typeof($ownerclass$),
        new PropertyMetadata($defaultvalue$)
    );

/// <summary>
/// Identifies the $property$ attached dependency property.
/// </summary>
public static readonly DependencyProperty $property$Property =
    $property$PropertyKey.DependencyProperty;

/// <summary>
/// Gets the value of the <see cref="$property$Property"/> attached dependency property.
/// </summary>
/// <param name="obj">
/// The <see cref="DependencyObject"/> for which the local value of the
/// <see cref="$property$Property"/> attached dependency property
/// should be retrieved.
/// </param>
/// <returns>
/// The local value of the <see cref="$property$Property"/> attached dependency property.
/// </returns>
public static $type$ Get$property$(DependencyObject obj) =>
    ($type$)obj.GetValue($property$Property);

private static void Set$property$(DependencyObject obj, $type$ value) =>
    obj.SetValue($property$PropertyKey, value);
$end$]]>
            </Code>
        </Snippet>
    </CodeSnippet>
</CodeSnippets>
